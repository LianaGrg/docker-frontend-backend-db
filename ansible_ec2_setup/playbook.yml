- name: Deploy Dockerized Web App from ECR
  hosts: web
  become: yes

  vars:
    aws_account_id: "{{ aws_account_id }}"
    aws_region: "{{ aws_region }}"
    ecr_registry: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com"
    frontend_image: "{{ ecr_registry }}/bdg/web_app_front:{{ image_tag }}"
    backend_image: "{{ ecr_registry }}/bdg/web_app_back:{{ image_tag }}"

  tasks:
    - name: Install required system dependencies
      apt:
        name:
          - docker.io
          - curl
          - unzip
        update_cache: yes

    - name: Download AWS CLI v2 installer
      get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip

    - name: Unzip AWS CLI installer
      unarchive:
        src: /tmp/awscliv2.zip
        dest: /tmp
        remote_src: yes

    - name: Check if AWS CLI is already installed
      command: aws --version
      register: aws_cli_check
      ignore_errors: yes
      changed_when: false

    - name: Install AWS CLI v2
      shell: ./aws/install
      args:
        chdir: /tmp
      when: aws_cli_check.rc != 0

    - name: Verify AWS CLI is installed
      command: aws --version
      register: aws_version

    - name: Show AWS CLI version
      debug:
        var: aws_version.stdout

    - name: Ensure Docker is started
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Install Docker Compose v2
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify docker-compose installed
      command: docker-compose --version
      register: compose_version
      changed_when: false

    - name: Show docker-compose version
      debug:
        var: compose_version.stdout

    - name: Ensure Docker service is started
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Login to Amazon ECR
      shell: |
        aws ecr get-login-password --region {{ aws_region }} | docker login --username AWS --password-stdin {{ frontend_image.split('/')[0] }}
      register: ecr_login
      changed_when: false

    - name: Create app directory
      file:
        path: /home/ubuntu/app
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Deploy docker-compose.yml
      template:
        src: templates/docker-compose.yml.j2
        dest: /home/ubuntu/app/docker-compose.yml
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Start application with Docker Compose
      shell: docker-compose up -d
      args:
        chdir: /home/ubuntu/app
