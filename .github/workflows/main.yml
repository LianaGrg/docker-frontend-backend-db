name: Build and Scan Docker Images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    env:
      FRONTEND_IMAGE: frontend
      BACKEND_IMAGE: backend
      IMAGE_TAG: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set image URLs
        id: image-urls
        run: |
          echo "FRONTEND_ECR=${{ steps.login-ecr.outputs.registry }}/bdg/web_app_front" >> $GITHUB_ENV
          echo "BACKEND_ECR=${{ steps.login-ecr.outputs.registry }}/bdg/web_app_back" >> $GITHUB_ENV

      - name: Build frontend image
        run: |
          docker build -t $FRONTEND_IMAGE:$IMAGE_TAG ./frontend
          docker tag $FRONTEND_IMAGE:$IMAGE_TAG $FRONTEND_ECR:$IMAGE_TAG

      - name: Build backend image
        run: |
          docker build -t $BACKEND_IMAGE:$IMAGE_TAG ./backend
          docker tag $BACKEND_IMAGE:$IMAGE_TAG $BACKEND_ECR:$IMAGE_TAG

      - name: Scan frontend image with Trivy (ignore result)
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image \
            --severity CRITICAL,HIGH \
            $FRONTEND_IMAGE:$IMAGE_TAG || true

      - name: Scan backend image with Trivy (ignore result)
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest image \
            --severity CRITICAL,HIGH \
            $BACKEND_IMAGE:$IMAGE_TAG || true

      - name: Push frontend image to ECR
        run: |
          docker push $FRONTEND_ECR:$IMAGE_TAG

      - name: Push backend image to ECR
        run: |
          docker push $BACKEND_ECR:$IMAGE_TAG
